#!/usr/bin/env bash
#
# Kill CPU hogging processes (mainly for browser tabs, but can be anything).
# Prevents 3rd party JS abuse, conserves energy, and helps saving the planet.
#
set -aue

#
# Adjust these _default_ values to taste:
#   How many total cumulative seconds of CPU to tolerate?
#   How much current %CPU to tolerate?
#
MAX_CPU_SECS=900
MAX_CPU_PCT=3

PS_FIELDS='pid,ppid,user,pri,pcpu,pmem,time,stime,tty,wchan,cmd'

function process-list() {
    /bin/ps -A -o "$PS_FIELDS" | grep -Pi -- "$1"
}

# shellcheck disable=SC2120
function terminate-hogs() {
    # Allow overriding (CPU max-seconds, CPU max-%pct)
    # (use default values when missing)
    local max_cpu_secs="${1:-$MAX_CPU_SECS}"
    local max_cpu_pct="${2:-$MAX_CPU_PCT}"

    perl -wne '
	# Read the process data, one line at a time
	my $max_cpu_secs = '"$max_cpu_secs"';
	my $max_cpu_pct   = '"$max_cpu_pct"';

	s/^\s+//;   # small PIDs are space padded

	my ($pid, $ppid, $user, $pri, $cpu, $mem, $time) = split(" ");
	my ($hh, $mm, $ss) = split(/\D+/, $time);
	my $cpu_secs = 3600*$hh + 60*$mm + $ss;
	next if ($cpu_secs < $max_cpu_secs);    # Not a CPU hog, skip
	next if ($cpu < $max_cpu_pct);          # Not a CPU hog, skip

	# If we get here, we found a CPU hogging process tab
        print "Killing CPU hogging process (Secs: $cpu_secs, %CPU: $cpu):\n$_";
	kill "TERM", $pid;
    '
}

#
# -- main (add rules as needed)
#
#    (1) Pass the regex to look for processes in this list:
#           ps -A -o 'pid,ppid,user,pri,pcpu,pmem,time,stime,tty,wchan,cmd'
#    (2) You may also override the 'terminate-hogs' CPU consumption
#        parameters (CPU max-secs, CPU %max-pct) by adding them at the end
#        e.g:
#           terminate-hogs 1200 3
#
process-list '[/]firefox -contentproc -childID.*tab$' | terminate-hogs
process-list '[/]chrom(e|ium) --type=(renderer|utility)' | terminate-hogs
process-list '[/]signal-desktop --type' | terminate-hogs

# Seen cases of KDE `plasma` spinning at 100% due to some bad widget/add-on,
# so add a rule for this as well.
#
# To restart a terminated plasma shell, just run:
#    kstart5 plasmashell
#
process-list '[/]plasmashell' | terminate-hogs
